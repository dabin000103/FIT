//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace AirWebService.com.modetour.webservice.Air.Mode {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ModeSoap", Namespace="http://webservice.modetour.com/")]
    public partial class Mode : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AirBookCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirBookExOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirTicket2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AirPaymentTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirBookRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirBookRefundCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirBookPayCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirBookFareModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirBookTLModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AirStatusInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCouponListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Mode() {
            this.Url = global::AirWebService.Properties.Settings.Default.AirWebService_com_modetour_webservice_Air_Mode_Mode;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AirBookCodeCompletedEventHandler AirBookCodeCompleted;
        
        /// <remarks/>
        public event AirBookCompletedEventHandler AirBookCompleted;
        
        /// <remarks/>
        public event AirBookExCompletedEventHandler AirBookExCompleted;
        
        /// <remarks/>
        public event AirCancelCompletedEventHandler AirCancelCompleted;
        
        /// <remarks/>
        public event AirPaymentCompletedEventHandler AirPaymentCompleted;
        
        /// <remarks/>
        public event AirTicketCompletedEventHandler AirTicketCompleted;
        
        /// <remarks/>
        public event AirTicket2CompletedEventHandler AirTicket2Completed;
        
        /// <remarks/>
        public event AirPaymentTicketCompletedEventHandler AirPaymentTicketCompleted;
        
        /// <remarks/>
        public event AirBookRefundCompletedEventHandler AirBookRefundCompleted;
        
        /// <remarks/>
        public event AirBookRefundCancelCompletedEventHandler AirBookRefundCancelCompleted;
        
        /// <remarks/>
        public event AirBookPayCancelCompletedEventHandler AirBookPayCancelCompleted;
        
        /// <remarks/>
        public event AirBookFareModifyCompletedEventHandler AirBookFareModifyCompleted;
        
        /// <remarks/>
        public event AirBookTLModifyCompletedEventHandler AirBookTLModifyCompleted;
        
        /// <remarks/>
        public event AirStatusInfoCompletedEventHandler AirStatusInfoCompleted;
        
        /// <remarks/>
        public event GetCouponListCompletedEventHandler GetCouponListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirBookCode", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AirBookCode(int SNM, string ItemGubun, string SiteCode, string UserId, string PathType) {
            object[] results = this.Invoke("AirBookCode", new object[] {
                        SNM,
                        ItemGubun,
                        SiteCode,
                        UserId,
                        PathType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AirBookCodeAsync(int SNM, string ItemGubun, string SiteCode, string UserId, string PathType) {
            this.AirBookCodeAsync(SNM, ItemGubun, SiteCode, UserId, PathType, null);
        }
        
        /// <remarks/>
        public void AirBookCodeAsync(int SNM, string ItemGubun, string SiteCode, string UserId, string PathType, object userState) {
            if ((this.AirBookCodeOperationCompleted == null)) {
                this.AirBookCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirBookCodeOperationCompleted);
            }
            this.InvokeAsync("AirBookCode", new object[] {
                        SNM,
                        ItemGubun,
                        SiteCode,
                        UserId,
                        PathType}, this.AirBookCodeOperationCompleted, userState);
        }
        
        private void OnAirBookCodeOperationCompleted(object arg) {
            if ((this.AirBookCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirBookCodeCompleted(this, new AirBookCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirBook", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirBook(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirBook", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirBookAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirBookAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirBookAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirBookOperationCompleted == null)) {
                this.AirBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirBookOperationCompleted);
            }
            this.InvokeAsync("AirBook", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirBookOperationCompleted, userState);
        }
        
        private void OnAirBookOperationCompleted(object arg) {
            if ((this.AirBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirBookCompleted(this, new AirBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirBookEx", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirBookEx(int ANM, int OID, int IBN, int PID, int RQR, string RQT, string COOKIE) {
            object[] results = this.Invoke("AirBookEx", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT,
                        COOKIE});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirBookExAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, string COOKIE) {
            this.AirBookExAsync(ANM, OID, IBN, PID, RQR, RQT, COOKIE, null);
        }
        
        /// <remarks/>
        public void AirBookExAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, string COOKIE, object userState) {
            if ((this.AirBookExOperationCompleted == null)) {
                this.AirBookExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirBookExOperationCompleted);
            }
            this.InvokeAsync("AirBookEx", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT,
                        COOKIE}, this.AirBookExOperationCompleted, userState);
        }
        
        private void OnAirBookExOperationCompleted(object arg) {
            if ((this.AirBookExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirBookExCompleted(this, new AirBookExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirCancel", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirCancel(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirCancel", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirCancelAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirCancelAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirCancelAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirCancelOperationCompleted == null)) {
                this.AirCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirCancelOperationCompleted);
            }
            this.InvokeAsync("AirCancel", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirCancelOperationCompleted, userState);
        }
        
        private void OnAirCancelOperationCompleted(object arg) {
            if ((this.AirCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirCancelCompleted(this, new AirCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirPayment", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirPayment(int ANM, int OID, int IBN, int PID, string PayCode, int PayAmount, int RQR, string RQT, string COOKIE) {
            object[] results = this.Invoke("AirPayment", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        PayCode,
                        PayAmount,
                        RQR,
                        RQT,
                        COOKIE});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirPaymentAsync(int ANM, int OID, int IBN, int PID, string PayCode, int PayAmount, int RQR, string RQT, string COOKIE) {
            this.AirPaymentAsync(ANM, OID, IBN, PID, PayCode, PayAmount, RQR, RQT, COOKIE, null);
        }
        
        /// <remarks/>
        public void AirPaymentAsync(int ANM, int OID, int IBN, int PID, string PayCode, int PayAmount, int RQR, string RQT, string COOKIE, object userState) {
            if ((this.AirPaymentOperationCompleted == null)) {
                this.AirPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirPaymentOperationCompleted);
            }
            this.InvokeAsync("AirPayment", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        PayCode,
                        PayAmount,
                        RQR,
                        RQT,
                        COOKIE}, this.AirPaymentOperationCompleted, userState);
        }
        
        private void OnAirPaymentOperationCompleted(object arg) {
            if ((this.AirPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirPaymentCompleted(this, new AirPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirTicket", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirTicket(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirTicket", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirTicketAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirTicketAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirTicketAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirTicketOperationCompleted == null)) {
                this.AirTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirTicketOperationCompleted);
            }
            this.InvokeAsync("AirTicket", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirTicketOperationCompleted, userState);
        }
        
        private void OnAirTicketOperationCompleted(object arg) {
            if ((this.AirTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirTicketCompleted(this, new AirTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirTicket2", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirTicket2(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirTicket2", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirTicket2Async(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirTicket2Async(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirTicket2Async(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirTicket2OperationCompleted == null)) {
                this.AirTicket2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirTicket2OperationCompleted);
            }
            this.InvokeAsync("AirTicket2", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirTicket2OperationCompleted, userState);
        }
        
        private void OnAirTicket2OperationCompleted(object arg) {
            if ((this.AirTicket2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirTicket2Completed(this, new AirTicket2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirPaymentTicket", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirPaymentTicket(int ANM, int OID, int IBN, int PID, string PayCode, int PayAmount, int RQR, string RQT, string COOKIE) {
            object[] results = this.Invoke("AirPaymentTicket", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        PayCode,
                        PayAmount,
                        RQR,
                        RQT,
                        COOKIE});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirPaymentTicketAsync(int ANM, int OID, int IBN, int PID, string PayCode, int PayAmount, int RQR, string RQT, string COOKIE) {
            this.AirPaymentTicketAsync(ANM, OID, IBN, PID, PayCode, PayAmount, RQR, RQT, COOKIE, null);
        }
        
        /// <remarks/>
        public void AirPaymentTicketAsync(int ANM, int OID, int IBN, int PID, string PayCode, int PayAmount, int RQR, string RQT, string COOKIE, object userState) {
            if ((this.AirPaymentTicketOperationCompleted == null)) {
                this.AirPaymentTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirPaymentTicketOperationCompleted);
            }
            this.InvokeAsync("AirPaymentTicket", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        PayCode,
                        PayAmount,
                        RQR,
                        RQT,
                        COOKIE}, this.AirPaymentTicketOperationCompleted, userState);
        }
        
        private void OnAirPaymentTicketOperationCompleted(object arg) {
            if ((this.AirPaymentTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirPaymentTicketCompleted(this, new AirPaymentTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirBookRefund", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirBookRefund(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirBookRefund", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirBookRefundAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirBookRefundAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirBookRefundAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirBookRefundOperationCompleted == null)) {
                this.AirBookRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirBookRefundOperationCompleted);
            }
            this.InvokeAsync("AirBookRefund", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirBookRefundOperationCompleted, userState);
        }
        
        private void OnAirBookRefundOperationCompleted(object arg) {
            if ((this.AirBookRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirBookRefundCompleted(this, new AirBookRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirBookRefundCancel", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirBookRefundCancel(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirBookRefundCancel", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirBookRefundCancelAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirBookRefundCancelAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirBookRefundCancelAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirBookRefundCancelOperationCompleted == null)) {
                this.AirBookRefundCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirBookRefundCancelOperationCompleted);
            }
            this.InvokeAsync("AirBookRefundCancel", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirBookRefundCancelOperationCompleted, userState);
        }
        
        private void OnAirBookRefundCancelOperationCompleted(object arg) {
            if ((this.AirBookRefundCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirBookRefundCancelCompleted(this, new AirBookRefundCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirBookPayCancel", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirBookPayCancel(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirBookPayCancel", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirBookPayCancelAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirBookPayCancelAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirBookPayCancelAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirBookPayCancelOperationCompleted == null)) {
                this.AirBookPayCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirBookPayCancelOperationCompleted);
            }
            this.InvokeAsync("AirBookPayCancel", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirBookPayCancelOperationCompleted, userState);
        }
        
        private void OnAirBookPayCancelOperationCompleted(object arg) {
            if ((this.AirBookPayCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirBookPayCancelCompleted(this, new AirBookPayCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirBookFareModify", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirBookFareModify(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirBookFareModify", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirBookFareModifyAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirBookFareModifyAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirBookFareModifyAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirBookFareModifyOperationCompleted == null)) {
                this.AirBookFareModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirBookFareModifyOperationCompleted);
            }
            this.InvokeAsync("AirBookFareModify", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirBookFareModifyOperationCompleted, userState);
        }
        
        private void OnAirBookFareModifyOperationCompleted(object arg) {
            if ((this.AirBookFareModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirBookFareModifyCompleted(this, new AirBookFareModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirBookTLModify", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirBookTLModify(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirBookTLModify", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirBookTLModifyAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirBookTLModifyAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirBookTLModifyAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirBookTLModifyOperationCompleted == null)) {
                this.AirBookTLModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirBookTLModifyOperationCompleted);
            }
            this.InvokeAsync("AirBookTLModify", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirBookTLModifyOperationCompleted, userState);
        }
        
        private void OnAirBookTLModifyOperationCompleted(object arg) {
            if ((this.AirBookTLModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirBookTLModifyCompleted(this, new AirBookTLModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/AirStatusInfo", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement AirStatusInfo(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("AirStatusInfo", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void AirStatusInfoAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.AirStatusInfoAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void AirStatusInfoAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.AirStatusInfoOperationCompleted == null)) {
                this.AirStatusInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAirStatusInfoOperationCompleted);
            }
            this.InvokeAsync("AirStatusInfo", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.AirStatusInfoOperationCompleted, userState);
        }
        
        private void OnAirStatusInfoOperationCompleted(object arg) {
            if ((this.AirStatusInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AirStatusInfoCompleted(this, new AirStatusInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.modetour.com/GetCouponList", RequestNamespace="http://webservice.modetour.com/", ResponseNamespace="http://webservice.modetour.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement GetCouponList(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            object[] results = this.Invoke("GetCouponList", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void GetCouponListAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT) {
            this.GetCouponListAsync(ANM, OID, IBN, PID, RQR, RQT, null);
        }
        
        /// <remarks/>
        public void GetCouponListAsync(int ANM, int OID, int IBN, int PID, int RQR, string RQT, object userState) {
            if ((this.GetCouponListOperationCompleted == null)) {
                this.GetCouponListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCouponListOperationCompleted);
            }
            this.InvokeAsync("GetCouponList", new object[] {
                        ANM,
                        OID,
                        IBN,
                        PID,
                        RQR,
                        RQT}, this.GetCouponListOperationCompleted, userState);
        }
        
        private void OnGetCouponListOperationCompleted(object arg) {
            if ((this.GetCouponListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCouponListCompleted(this, new GetCouponListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirBookCodeCompletedEventHandler(object sender, AirBookCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirBookCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirBookCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirBookCompletedEventHandler(object sender, AirBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirBookExCompletedEventHandler(object sender, AirBookExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirBookExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirBookExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirCancelCompletedEventHandler(object sender, AirCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirPaymentCompletedEventHandler(object sender, AirPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirTicketCompletedEventHandler(object sender, AirTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirTicket2CompletedEventHandler(object sender, AirTicket2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirTicket2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirTicket2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirPaymentTicketCompletedEventHandler(object sender, AirPaymentTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirPaymentTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirPaymentTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirBookRefundCompletedEventHandler(object sender, AirBookRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirBookRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirBookRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirBookRefundCancelCompletedEventHandler(object sender, AirBookRefundCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirBookRefundCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirBookRefundCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirBookPayCancelCompletedEventHandler(object sender, AirBookPayCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirBookPayCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirBookPayCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirBookFareModifyCompletedEventHandler(object sender, AirBookFareModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirBookFareModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirBookFareModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirBookTLModifyCompletedEventHandler(object sender, AirBookTLModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirBookTLModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirBookTLModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AirStatusInfoCompletedEventHandler(object sender, AirStatusInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AirStatusInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AirStatusInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCouponListCompletedEventHandler(object sender, GetCouponListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCouponListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCouponListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591